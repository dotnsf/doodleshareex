<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8"/>
<title><%= __('common.appname') %></title>
<script type="text/javascript" src="//code.jquery.com/jquery-2.2.4.min.js"></script>
<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.5.1/css/bootstrap.min.css" rel="stylesheet"/>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.5.1/js/bootstrap.min.js"></script>
<link href="//use.fontawesome.com/releases/v5.8.1/css/all.css" rel="stylesheet"/>
<script src="/common.js"></script>
<script src="//dotnsf.github.io/djs/djs.js"></script>
<meta name="viewport" content="width=device-width,initial-scale=1"/>

<link rel="shortcut icon" href="/icon.png" type="image/png"/>
<link rel="icon" href="/icon.png" type="image/png"/>
<link rel="apple-touch-icon" href="/icon.png"/>

<!-- // OGP tags -->
<meta property="og:title" content="<%= __('screen.head.title') %>"/>
<meta property="og:type" content="website"/>
<meta property="og:url" content="https://doodleshareex.yellowmix.net/"/>
<meta property="og:image" content="https://doodleshareex.yellowmix.net/icon.png"/>
<meta property="og:site_name" content="<%= __('common.appname') %>"/>
<meta property="og:description" content="<%= __('screen.head.title') %>"/>
<!-- OGP tags // -->

<!-- // Twitter Card -->
<meta name="robots" content="max-image-preview:large" />
<meta name="twitter:card" content="summary_large_image"/>
<meta name="twitter:site" content="@dotnsf"/>
<meta name="twitter:creator" content="@dotnsf"/>
<meta name="twitter:url" content="https://doodleshareex.yellowmix.net/"/>
<meta name="twitter:image:src" content="https://doodleshareex.yellowmix.net/icon.png"/>
<meta name="twitter:title" content="<%= __('common.appname') %>"/>
<meta name="twitter:description" content="<%= __('screen.head.title') %>"/>
<link rel="alternate" media="handheld" type="application/xhtml+xml" href="https://doodleshareex.yellowmix.net/" />
<!-- Twitter Card // -->

<meta name="viewport" content="width=device-width,initial-scale=1"/>
<meta name="apple-mobile-web-app-capable" content="yes"/>
<meta name="apple-mobile-web-app-status-bar-style" content="black"/>
<meta name="apple-mobile-web-app-title" content="<%= __('common.appname') %>"/>

<style type="text/css">
html, body{
  text-align: center;
  background-color: #fafafa;
  font-size: 20px;
  color: #333;
}
#comment{
  width: 100%;
}
</style>
</head>
<body>
<h3 id="name"><%= name %></h3>

<div class="container" id="djs_main" style="position: relative; top: 20px;">
</div>

<div class="modal bd-example-modal-lg fade" id="__extraModal" tabindex="-1" role="dialog" aria-labbelledby="extraModal" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="__extraModalLabel"><%= __('client.modal.label') %></h4>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="__extramodal-body">
        <textarea class="form-control" id="comment" value=""></textarea>
      </div>
      <div class="modal-footer btn-center">
        <button type="button" class="btn btn-primary modal_button" data-dismiss="modal">OK</button>
      </div>
    </div>
  </div>
</div>

<!-- Toast -->
<div class="toast" id="qrcode_toast" role="alert" aria-live="assertive" aria-atomic="true">
  <div id="toast-body" class="toast-body" style="font-size: 14px;">
    <%= __('client.toast.body') %>
  </div>
</div>

<script>
var uuid = generateUUID();

var djs = null;
var ws = null;

//. 参考: https://gist.github.com/Cartman0/436459b9b85cfdd1ca9c
$(function(){
  //. ヒストリバック無効化
  if( window.history && window.history.pushState ){
    history.pushState( "nohb", null, null );
    $(window).on( "popState", function( evt ){
      if( !event.originalEvent.state ){
        history.pushState( "nohb", null, null );
        return;
      }
    });
  }

  djs = $('#djs_main').doodlejs({ extra: 'comment' });
  djs.__proto__.__sendImage = sendImage;        //. sendImage を上書き
  djs.__proto__.__submitCanvas = saveImage;     //. submitCanvas を上書き

  //. モーダル終了時
  $('#__extraModal').on( 'hidden.bs.modal', function(){
    sendImage();
  });

  init();
});

function init(){
  var browserWidth = window.innerWidth;
  var browserHeight = window.innerHeight;
  var canvas = document.getElementById( '__mycanvas' );
  if( canvas && canvas.getContext ){
    canvas.width = browserWidth * 0.8;
    canvas.height = browserHeight * 0.6;
  }

  //. Redis 対応
  ws = location.protocol.indexOf( 'https' ) > -1 ? ( new WebSocket( `wss://${location.host}` ) ) : ( new WebSocket( `ws://${location.host}` ) );
  ws.onopen = function(){
    //. 接続できた時
    console.log( 'WebSocket connection established' );
  };
  ws.onmessage = function (message) {
    var data = JSON.parse( message.data )
    //showMessage(JSON.stringify(data.message));
  };
  ws.onclose = function( event ){
    ws = null;
  };
  ws.onerror = function( event ){
  };
}

function saveImage(){
  var canvas = document.getElementById( '__mycanvas' );
  if( !canvas || !canvas.getContext ){
    return false;
  }
  var ctx = canvas.getContext( '2d' );

  //. 画像データ
  var png = canvas.toDataURL( 'image/png' );
  png = png.replace( /^.*,/, '' );

  //. バイナリ変換
  var bin = atob( png );
  var buffer = new Uint8Array( bin.length );
  for( var i = 0; i < bin.length; i ++ ){
    buffer[i] = bin.charCodeAt( i );
  }
  var blob = new Blob( [buffer.buffer], {
    type: 'image/png'
  });

  //. フォームにして送信
  console.log( 'Sending data... : ' + blob.size );
  var formData = new FormData();
  formData.append( 'image', blob );    //. <form enctype='multipart/formdata'><input name='image' type='file'/> ...
  formData.append( 'timestamp', ( new Date() ).getTime() );
  formData.append( 'name', $('#name').text() );
  formData.append( 'comment', $('#comment').val() );
  formData.append( 'room', '<%= room %>' );
  formData.append( 'uuid', uuid );
  $.ajax({
    type: 'POST',
    url: '/db/image',
    data: formData,
    contentType: false,
    processData: false,
    success: function( data, dataType ){
      //. #56

      /* その画像をダウンロードさせる */
      var tm = ( new Date() ).getTime();
      var filename = ( $('#name').text() ) + '-' + tm + '.png';
      if( window.navigator.msSaveBlob ){
        window.navigator.msSaveBlob( blob, filename );
        window.navigator.msSaveOrOpenBlob( blob, filename );
      }else{
        try{
          var image_url = window.URL.createObjectURL( blob );
          var link = document.createElement( 'a' );
          link.href = image_url;
          link.download = filename;
          document.body.appendChild( link );
          link.click();
          document.body.removeChild( link );
        }catch( e ){
          throw new Error( `${e}` );
        }
      }
    },
    error: function( jqXHR, textStatus, errorThrown ){
      console.log( textStatus + ': ' + errorThrown );
    }
  });
}

function sendImage(){
  //. キャンバスを取得
  var canvas = document.getElementById( '__mycanvas' );
  if( !canvas || !canvas.getContext ){
    return false;
  }

  //. 画像データ
  var png = canvas.toDataURL( 'image/png' );

  //. コメント
  var comment = $('#comment').val();
  if( !comment ){ comment = ''; }

  //. 画像を通知
  var msg = {
    uuid: uuid,
    room: '<%= room %>',
    name: '<%= name %>',
    comment: comment,
    timestamp: ( new Date() ).getTime(),
    image_src: png
  };
  //socketio.json.emit( 'image_client', msg );
  ws.send( '<%= room %>:' + JSON.stringify( msg ) );
}
</script>
</body>
</html>
